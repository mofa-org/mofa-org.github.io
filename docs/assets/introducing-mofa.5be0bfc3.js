const id = "introducing-mofa.md";
						const collection = "blog";
						const slug = "introducing-mofa";
						const body = "\n# Markdown 格式测试文档\n\n这是一个用于测试博客系统 Markdown 渲染能力的综合测试文档。\n\n## 文本格式测试\n\n### 基础文本样式\n\n这是普通文本。**这是粗体文本**。*这是斜体文本*。***这是粗斜体文本***。\n\n~~这是删除线文本~~。`这是内联代码`。\n\n### 链接测试\n\n- [外部链接](https://github.com/moxin-org/mofa)\n- [内部链接](/docs/quick-start)\n- [带标题的链接](https://mofa.ai \"MoFA 官方网站\")\n\n### 图片测试\n\n![MoFA Logo](/mofa-logo.png)\n\n## 标题层级测试\n\n# 一级标题 H1\n## 二级标题 H2  \n### 三级标题 H3\n#### 四级标题 H4\n##### 五级标题 H5\n###### 六级标题 H6\n\n## 列表测试\n\n### 无序列表\n\n- 第一项\n- 第二项\n  - 嵌套项目 2.1\n  - 嵌套项目 2.2\n    - 深度嵌套 2.2.1\n- 第三项\n\n### 有序列表\n\n1. 第一步\n2. 第二步\n   1. 子步骤 2.1\n   2. 子步骤 2.2\n3. 第三步\n\n### 任务列表\n\n- [x] 已完成的任务\n- [ ] 待完成的任务\n- [x] 另一个已完成的任务\n- [ ] 另一个待完成的任务\n\n## 代码块测试\n\n### Python 代码\n\n```python\ndef hello_world():\n    \"\"\"一个简单的Hello World函数\"\"\"\n    print(\"Hello, MoFA!\")\n    \n    # 创建一个简单的代理\n    agent = Agent(\n        name=\"greeter\",\n        prompt=\"你是一个友好的助手\"\n    )\n    \n    return agent.run(\"向世界问好\")\n\n# 调用函数\nresult = hello_world()\n```\n\n### JavaScript 代码\n\n```javascript\n// ES6 异步函数示例\nconst fetchData = async (url) => {\n    try {\n        const response = await fetch(url);\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error('获取数据失败:', error);\n        throw error;\n    }\n};\n\n// 使用示例\nfetchData('/api/agents')\n    .then(data => console.log(data))\n    .catch(err => console.error(err));\n```\n\n### YAML 配置\n\n```yaml\n# MoFA Agent 配置示例\nname: test-service\nversion: 1.0.0\n\n# Service configuration\nservice:\n  port: 8080\n  host: localhost\n  timeout: 30s\n\n# Database settings\ndatabase:\n  type: postgresql\n  host: db.example.com\n  port: 5432\n  name: testdb\n  user: admin\n  max_connections: 100\n\n# Cache configuration  \ncache:\n  enabled: true\n  type: redis\n  host: cache.example.com\n  port: 6379\n  ttl: 3600\n\n# Monitoring\nmonitoring:\n  enabled: true\n  metrics:\n    - cpu_usage\n    - memory_usage\n    - request_count\n  alerts:\n    - type: high_cpu\n      threshold: 80\n    - type: high_memory \n      threshold: 90\n\n# Feature flags\nfeatures:\n  new_ui: true\n  beta_api: false\n  dark_mode: true\n\n\n```\n\n## 引用测试\n\n> 这是一个简单的引用块。\n> 它可以包含多行内容。\n\n> ### 引用中的标题\n> \n> 引用块中也可以包含其他格式：\n> \n> - 列表项目\n> - **粗体文本**\n> - `代码片段`\n> \n> > 这是嵌套的引用块。\n\n## 表格测试\n\n### 简单表格\n\n| 特性 | MoFA | 其他框架 |\n|------|------|----------|\n| 易用性 | ⭐⭐⭐⭐⭐ | ⭐⭐⭐ |\n| 扩展性 | ⭐⭐⭐⭐⭐ | ⭐⭐⭐⭐ |\n| 性能 | ⭐⭐⭐⭐ | ⭐⭐⭐ |\n| 社区支持 | ⭐⭐⭐⭐ | ⭐⭐⭐⭐⭐ |\n\n### 对齐表格\n\n| 左对齐 | 居中对齐 | 右对齐 |\n|:-------|:--------:|-------:|\n| 文本 | 文本 | 文本 |\n| 长一点的文本内容 | 居中显示的内容 | 999.99 |\n| 短文本 | 中等长度的文本 | 42 |\n\n## 分隔线测试\n\n---\n\n这是一条分隔线上方的内容。\n\n***\n\n这是另一条分隔线下方的内容。\n\n___\n\n还有一种分隔线样式。\n\n## 特殊字符和符号\n\n### Emoji 测试\n\n🚀 🎯 💡 🔧 📚 ⚡ 🌟 🎨 🏆 💪\n\n### 特殊符号\n\n- 版权符号：© 2024\n- 商标符号：MoFA™\n- 注册商标：Python®\n- 箭头：→ ← ↑ ↓ ⇒ ⇐\n- 数学符号：± × ÷ ≠ ≤ ≥ ∞ √ ∑\n\n## HTML 元素测试\n\n### 键盘按键\n\n按下 <kbd>Ctrl</kbd> + <kbd>C</kbd> 复制文本。\n\n使用 <kbd>Cmd</kbd> + <kbd>V</kbd> 粘贴内容（Mac）。\n\n### 高亮文本\n\n这是一段包含 <mark>高亮文本</mark> 的句子。\n\n### 上标和下标\n\n水分子的化学式是 H<sub>2</sub>O。\n\n爱因斯坦的质能方程是 E = mc<sup>2</sup>。\n\n## 定义列表测试\n\nMoFA\n: Modular Framework for AI Agents，模块化 AI 代理框架\n\nAgent\n: 代理，在 MoFA 中指具有特定功能的 AI 单元\n\nPipeline\n: 管道，用于连接和编排多个 Agent 的工作流\n\n## 脚注测试\n\n这是一个包含脚注的句子[^1]。\n\n这是另一个脚注[^note]。\n\n[^1]: 这是第一个脚注的内容。\n\n[^note]: 这是命名脚注的内容，可以包含**格式化文本**和[链接](https://mofa.ai)。\n\n## 数学公式测试（如果支持）\n\n### 内联公式\n\n这是一个内联数学公式：$E = mc^2$\n\n### 块级公式\n\n$$\n\\sum_{i=1}^{n} x_i = x_1 + x_2 + \\cdots + x_n\n$$\n\n$$\n\\int_{0}^{\\infty} e^{-x^2} dx = \\frac{\\sqrt{\\pi}}{2}\n$$\n\n## 流程图测试（如果支持 Mermaid）\n\n```mermaid\ngraph TD\n    A[开始] --> B{是否有输入?}\n    B -->|是| C[处理输入]\n    B -->|否| D[等待输入]\n    C --> E[生成输出]\n    D --> B\n    E --> F[结束]\n```\n\n## 总结\n\n这个测试文档包含了大部分常用的 Markdown 格式：\n\n1. ✅ 标题层级（H1-H6）\n2. ✅ 文本格式（粗体、斜体、删除线）\n3. ✅ 列表（有序、无序、任务列表）\n4. ✅ 链接和图片\n5. ✅ 代码块（多种语言）\n6. ✅ 引用块\n7. ✅ 表格（简单和对齐）\n8. ✅ 分隔线\n9. ✅ HTML 元素\n10. ✅ 特殊字符和 Emoji\n11. ✅ 定义列表\n12. ✅ 脚注\n13. ⚠️ 数学公式（需要插件支持）\n14. ⚠️ 流程图（需要 Mermaid 支持）\n\n通过这个测试文档，我们可以验证博客系统对各种 Markdown 格式的渲染效果。 ";
						const data = {title:"Markdown 格式测试文档",description:"一个全面的 Markdown 测试文档，用于测试博客系统对各种格式的支持",date:new Date(1733011200000),author:"测试团队",tags:["测试","Markdown","格式1"]};
						const _internal = {
							type: 'content',
							filePath: "/Users/liyao/Code/mofa-org.github.io/mofa-website/src/content/blog/introducing-mofa.md",
							rawData: "\ntitle: Markdown 格式测试文档\ndescription: 一个全面的 Markdown 测试文档，用于测试博客系统对各种格式的支持\ndate: 2024-12-01\nauthor: 测试团队\ntags: [测试, Markdown, 格式1]",
						};

export { _internal, body, collection, data, id, slug };
