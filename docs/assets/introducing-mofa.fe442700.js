import { c as createComponent, r as renderTemplate, m as maybeRenderHead, u as unescapeHTML } from './astro.32e88c90.js';
import 'clsx';

const html = "<h1 id=\"markdown-格式测试文档\">Markdown 格式测试文档</h1>\n<p>这是一个用于测试博客系统 Markdown 渲染能力的综合测试文档。</p>\n<h2 id=\"文本格式测试\">文本格式测试</h2>\n<h3 id=\"基础文本样式\">基础文本样式</h3>\n<p>这是普通文本。<strong>这是粗体文本</strong>。<em>这是斜体文本</em>。<em><strong>这是粗斜体文本</strong></em>。</p>\n<p><del>这是删除线文本</del>。<code>这是内联代码</code>。</p>\n<h3 id=\"链接测试\">链接测试</h3>\n<ul>\n<li><a href=\"https://github.com/moxin-org/mofa\">外部链接</a></li>\n<li><a href=\"/docs/quick-start\">内部链接</a></li>\n<li><a href=\"https://mofa.ai\" title=\"MoFA 官方网站\">带标题的链接</a></li>\n</ul>\n<h3 id=\"图片测试\">图片测试</h3>\n<p><img src=\"/mofa-logo.png\" alt=\"MoFA Logo\"></p>\n<h2 id=\"标题层级测试\">标题层级测试</h2>\n<h1 id=\"一级标题-h1\">一级标题 H1</h1>\n<h2 id=\"二级标题-h2\">二级标题 H2</h2>\n<h3 id=\"三级标题-h3\">三级标题 H3</h3>\n<h4 id=\"四级标题-h4\">四级标题 H4</h4>\n<h5 id=\"五级标题-h5\">五级标题 H5</h5>\n<h6 id=\"六级标题-h6\">六级标题 H6</h6>\n<h2 id=\"列表测试\">列表测试</h2>\n<h3 id=\"无序列表\">无序列表</h3>\n<ul>\n<li>第一项</li>\n<li>第二项\n<ul>\n<li>嵌套项目 2.1</li>\n<li>嵌套项目 2.2\n<ul>\n<li>深度嵌套 2.2.1</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>第三项</li>\n</ul>\n<h3 id=\"有序列表\">有序列表</h3>\n<ol>\n<li>第一步</li>\n<li>第二步\n<ol>\n<li>子步骤 2.1</li>\n<li>子步骤 2.2</li>\n</ol>\n</li>\n<li>第三步</li>\n</ol>\n<h3 id=\"任务列表\">任务列表</h3>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> 已完成的任务</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 待完成的任务</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> 另一个已完成的任务</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 另一个待完成的任务</li>\n</ul>\n<h2 id=\"代码块测试\">代码块测试</h2>\n<h3 id=\"python-代码\">Python 代码</h3>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583\">def</span><span style=\"color:#B392F0\"> hello_world</span><span style=\"color:#E1E4E8\">():</span></span>\n<span class=\"line\"><span style=\"color:#9ECBFF\">    \"\"\"一个简单的Hello World函数\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">    print</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#9ECBFF\">\"Hello, MoFA!\"</span><span style=\"color:#E1E4E8\">)</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">    # 创建一个简单的代理</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    agent </span><span style=\"color:#F97583\">=</span><span style=\"color:#E1E4E8\"> Agent(</span></span>\n<span class=\"line\"><span style=\"color:#FFAB70\">        name</span><span style=\"color:#F97583\">=</span><span style=\"color:#9ECBFF\">\"greeter\"</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFAB70\">        prompt</span><span style=\"color:#F97583\">=</span><span style=\"color:#9ECBFF\">\"你是一个友好的助手\"</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    )</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    </span></span>\n<span class=\"line\"><span style=\"color:#F97583\">    return</span><span style=\"color:#E1E4E8\"> agent.run(</span><span style=\"color:#9ECBFF\">\"向世界问好\"</span><span style=\"color:#E1E4E8\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\"># 调用函数</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">result </span><span style=\"color:#F97583\">=</span><span style=\"color:#E1E4E8\"> hello_world()</span></span></code></pre>\n<h3 id=\"javascript-代码\">JavaScript 代码</h3>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D\">// ES6 异步函数示例</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#B392F0\"> fetchData</span><span style=\"color:#F97583\"> =</span><span style=\"color:#F97583\"> async</span><span style=\"color:#E1E4E8\"> (</span><span style=\"color:#FFAB70\">url</span><span style=\"color:#E1E4E8\">) </span><span style=\"color:#F97583\">=></span><span style=\"color:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">    try</span><span style=\"color:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">        const</span><span style=\"color:#79B8FF\"> response</span><span style=\"color:#F97583\"> =</span><span style=\"color:#F97583\"> await</span><span style=\"color:#B392F0\"> fetch</span><span style=\"color:#E1E4E8\">(url);</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">        const</span><span style=\"color:#79B8FF\"> data</span><span style=\"color:#F97583\"> =</span><span style=\"color:#F97583\"> await</span><span style=\"color:#E1E4E8\"> response.</span><span style=\"color:#B392F0\">json</span><span style=\"color:#E1E4E8\">();</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">        return</span><span style=\"color:#E1E4E8\"> data;</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    } </span><span style=\"color:#F97583\">catch</span><span style=\"color:#E1E4E8\"> (error) {</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">        console.</span><span style=\"color:#B392F0\">error</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#9ECBFF\">'获取数据失败:'</span><span style=\"color:#E1E4E8\">, error);</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">        throw</span><span style=\"color:#E1E4E8\"> error;</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    }</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// 使用示例</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">fetchData</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#9ECBFF\">'/api/agents'</span><span style=\"color:#E1E4E8\">)</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    .</span><span style=\"color:#B392F0\">then</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#FFAB70\">data</span><span style=\"color:#F97583\"> =></span><span style=\"color:#E1E4E8\"> console.</span><span style=\"color:#B392F0\">log</span><span style=\"color:#E1E4E8\">(data))</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    .</span><span style=\"color:#B392F0\">catch</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#FFAB70\">err</span><span style=\"color:#F97583\"> =></span><span style=\"color:#E1E4E8\"> console.</span><span style=\"color:#B392F0\">error</span><span style=\"color:#E1E4E8\">(err));</span></span></code></pre>\n<h3 id=\"yaml-配置\">YAML 配置</h3>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D\"># MoFA Agent 配置示例</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">name</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">test-service</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">version</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#79B8FF\">1.0.0</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\"># Service configuration</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">service</span><span style=\"color:#E1E4E8\">:</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">  port</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#79B8FF\">8080</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">  host</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">localhost</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">  timeout</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">30s</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\"># Database settings</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">database</span><span style=\"color:#E1E4E8\">:</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">  type</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">postgresql</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">  host</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">db.example.com</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">  port</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#79B8FF\">5432</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">  name</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">testdb</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">  user</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">admin</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">  max_connections</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#79B8FF\">100</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\"># Cache configuration  </span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">cache</span><span style=\"color:#E1E4E8\">:</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">  enabled</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#79B8FF\">true</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">  type</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">redis</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">  host</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">cache.example.com</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">  port</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#79B8FF\">6379</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">  ttl</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#79B8FF\">3600</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\"># Monitoring</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">monitoring</span><span style=\"color:#E1E4E8\">:</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">  enabled</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#79B8FF\">true</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">  metrics</span><span style=\"color:#E1E4E8\">:</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    - </span><span style=\"color:#9ECBFF\">cpu_usage</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    - </span><span style=\"color:#9ECBFF\">memory_usage</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    - </span><span style=\"color:#9ECBFF\">request_count</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">  alerts</span><span style=\"color:#E1E4E8\">:</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    - </span><span style=\"color:#85E89D\">type</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">high_cpu</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">      threshold</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#79B8FF\">80</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    - </span><span style=\"color:#85E89D\">type</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#9ECBFF\">high_memory</span><span style=\"color:#E1E4E8\"> </span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">      threshold</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#79B8FF\">90</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\"># Feature flags</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">features</span><span style=\"color:#E1E4E8\">:</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">  new_ui</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#79B8FF\">true</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">  beta_api</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#79B8FF\">false</span></span>\n<span class=\"line\"><span style=\"color:#85E89D\">  dark_mode</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#79B8FF\">true</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"引用测试\">引用测试</h2>\n<blockquote>\n<p>这是一个简单的引用块。\n它可以包含多行内容。</p>\n</blockquote>\n<blockquote>\n<h3 id=\"引用中的标题\">引用中的标题</h3>\n<p>引用块中也可以包含其他格式：</p>\n<ul>\n<li>\n<p>列表项目</p>\n</li>\n<li>\n<p><strong>粗体文本</strong></p>\n</li>\n<li>\n<p><code>代码片段</code></p>\n</li>\n</ul>\n<blockquote>\n<p>这是嵌套的引用块。</p>\n</blockquote>\n</blockquote>\n<h2 id=\"表格测试\">表格测试</h2>\n<h3 id=\"简单表格\">简单表格</h3>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>特性</th><th>MoFA</th><th>其他框架</th></tr></thead><tbody><tr><td>易用性</td><td>⭐⭐⭐⭐⭐</td><td>⭐⭐⭐</td></tr><tr><td>扩展性</td><td>⭐⭐⭐⭐⭐</td><td>⭐⭐⭐⭐</td></tr><tr><td>性能</td><td>⭐⭐⭐⭐</td><td>⭐⭐⭐</td></tr><tr><td>社区支持</td><td>⭐⭐⭐⭐</td><td>⭐⭐⭐⭐⭐</td></tr></tbody></table>\n<h3 id=\"对齐表格\">对齐表格</h3>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th align=\"left\">左对齐</th><th align=\"center\">居中对齐</th><th align=\"right\">右对齐</th></tr></thead><tbody><tr><td align=\"left\">文本</td><td align=\"center\">文本</td><td align=\"right\">文本</td></tr><tr><td align=\"left\">长一点的文本内容</td><td align=\"center\">居中显示的内容</td><td align=\"right\">999.99</td></tr><tr><td align=\"left\">短文本</td><td align=\"center\">中等长度的文本</td><td align=\"right\">42</td></tr></tbody></table>\n<h2 id=\"分隔线测试\">分隔线测试</h2>\n<hr>\n<p>这是一条分隔线上方的内容。</p>\n<hr>\n<p>这是另一条分隔线下方的内容。</p>\n<hr>\n<p>还有一种分隔线样式。</p>\n<h2 id=\"特殊字符和符号\">特殊字符和符号</h2>\n<h3 id=\"emoji-测试\">Emoji 测试</h3>\n<p>🚀 🎯 💡 🔧 📚 ⚡ 🌟 🎨 🏆 💪</p>\n<h3 id=\"特殊符号\">特殊符号</h3>\n<ul>\n<li>版权符号：© 2024</li>\n<li>商标符号：MoFA™</li>\n<li>注册商标：Python®</li>\n<li>箭头：→ ← ↑ ↓ ⇒ ⇐</li>\n<li>数学符号：± × ÷ ≠ ≤ ≥ ∞ √ ∑</li>\n</ul>\n<h2 id=\"html-元素测试\">HTML 元素测试</h2>\n<h3 id=\"键盘按键\">键盘按键</h3>\n<p>按下 <kbd>Ctrl</kbd> + <kbd>C</kbd> 复制文本。</p>\n<p>使用 <kbd>Cmd</kbd> + <kbd>V</kbd> 粘贴内容（Mac）。</p>\n<h3 id=\"高亮文本\">高亮文本</h3>\n<p>这是一段包含 <mark>高亮文本</mark> 的句子。</p>\n<h3 id=\"上标和下标\">上标和下标</h3>\n<p>水分子的化学式是 H<sub>2</sub>O。</p>\n<p>爱因斯坦的质能方程是 E = mc<sup>2</sup>。</p>\n<h2 id=\"定义列表测试\">定义列表测试</h2>\n<p>MoFA\n: Modular Framework for AI Agents，模块化 AI 代理框架</p>\n<p>Agent\n: 代理，在 MoFA 中指具有特定功能的 AI 单元</p>\n<p>Pipeline\n: 管道，用于连接和编排多个 Agent 的工作流</p>\n<h2 id=\"脚注测试\">脚注测试</h2>\n<p>这是一个包含脚注的句子<sup><a href=\"#user-content-fn-1\" id=\"user-content-fnref-1\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">1</a></sup>。</p>\n<p>这是另一个脚注<sup><a href=\"#user-content-fn-note\" id=\"user-content-fnref-note\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">2</a></sup>。</p>\n<h2 id=\"数学公式测试如果支持\">数学公式测试（如果支持）</h2>\n<h3 id=\"内联公式\">内联公式</h3>\n<p>这是一个内联数学公式：$E = mc^2$</p>\n<h3 id=\"块级公式\">块级公式</h3>\n<p>$$\n\\sum_{i=1}^{n} x_i = x_1 + x_2 + \\cdots + x_n\n$$</p>\n<p>$$\n\\int_{0}^{\\infty} e^{-x^2} dx = \\frac{\\sqrt{\\pi}}{2}\n$$</p>\n<h2 id=\"流程图测试如果支持-mermaid\">流程图测试（如果支持 Mermaid）</h2>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F97583\">graph</span><span style=\"color:#B392F0\"> TD</span></span>\n<span class=\"line\"><span style=\"color:#FFAB70\">    A</span><span style=\"color:#F97583\">[</span><span style=\"color:#9ECBFF\">开始</span><span style=\"color:#F97583\">]</span><span style=\"color:#F97583\"> --></span><span style=\"color:#FFAB70\"> B</span><span style=\"color:#F97583\">{</span><span style=\"color:#9ECBFF\">是否有输入?</span><span style=\"color:#F97583\">}</span></span>\n<span class=\"line\"><span style=\"color:#FFAB70\">    B </span><span style=\"color:#F97583\">-->|</span><span style=\"color:#9ECBFF\">是</span><span style=\"color:#F97583\">|</span><span style=\"color:#FFAB70\"> C</span><span style=\"color:#F97583\">[</span><span style=\"color:#9ECBFF\">处理输入</span><span style=\"color:#F97583\">]</span></span>\n<span class=\"line\"><span style=\"color:#FFAB70\">    B </span><span style=\"color:#F97583\">-->|</span><span style=\"color:#9ECBFF\">否</span><span style=\"color:#F97583\">|</span><span style=\"color:#FFAB70\"> D</span><span style=\"color:#F97583\">[</span><span style=\"color:#9ECBFF\">等待输入</span><span style=\"color:#F97583\">]</span></span>\n<span class=\"line\"><span style=\"color:#FFAB70\">    C </span><span style=\"color:#F97583\">--></span><span style=\"color:#FFAB70\"> E</span><span style=\"color:#F97583\">[</span><span style=\"color:#9ECBFF\">生成输出</span><span style=\"color:#F97583\">]</span></span>\n<span class=\"line\"><span style=\"color:#FFAB70\">    D </span><span style=\"color:#F97583\">--></span><span style=\"color:#FFAB70\"> B</span></span>\n<span class=\"line\"><span style=\"color:#FFAB70\">    E </span><span style=\"color:#F97583\">--></span><span style=\"color:#FFAB70\"> F</span><span style=\"color:#F97583\">[</span><span style=\"color:#9ECBFF\">结束</span><span style=\"color:#F97583\">]</span></span></code></pre>\n<h2 id=\"总结\">总结</h2>\n<p>这个测试文档包含了大部分常用的 Markdown 格式：</p>\n<ol>\n<li>✅ 标题层级（H1-H6）</li>\n<li>✅ 文本格式（粗体、斜体、删除线）</li>\n<li>✅ 列表（有序、无序、任务列表）</li>\n<li>✅ 链接和图片</li>\n<li>✅ 代码块（多种语言）</li>\n<li>✅ 引用块</li>\n<li>✅ 表格（简单和对齐）</li>\n<li>✅ 分隔线</li>\n<li>✅ HTML 元素</li>\n<li>✅ 特殊字符和 Emoji</li>\n<li>✅ 定义列表</li>\n<li>✅ 脚注</li>\n<li>⚠️ 数学公式（需要插件支持）</li>\n<li>⚠️ 流程图（需要 Mermaid 支持）</li>\n</ol>\n<p>通过这个测试文档，我们可以验证博客系统对各种 Markdown 格式的渲染效果。</p>\n<section data-footnotes=\"\" class=\"footnotes\"><h2 class=\"sr-only\" id=\"footnote-label\">Footnotes</h2>\n<ol>\n<li id=\"user-content-fn-1\">\n<p>这是第一个脚注的内容。 <a href=\"#user-content-fnref-1\" data-footnote-backref=\"\" class=\"data-footnote-backref\" aria-label=\"Back to content\">↩</a></p>\n</li>\n<li id=\"user-content-fn-note\">\n<p>这是命名脚注的内容，可以包含<strong>格式化文本</strong>和<a href=\"https://mofa.ai\">链接</a>。 <a href=\"#user-content-fnref-note\" data-footnote-backref=\"\" class=\"data-footnote-backref\" aria-label=\"Back to content\">↩</a></p>\n</li>\n</ol>\n</section>";

				const frontmatter = {"title":"Markdown 格式测试文档","description":"一个全面的 Markdown 测试文档，用于测试博客系统对各种格式的支持","date":"2024-12-01T00:00:00.000Z","author":"测试团队","tags":["测试","Markdown","格式1"]};
				const file = "/home/runner/work/mofa-org.github.io/mofa-org.github.io/mofa-website/src/content/blog/introducing-mofa.md";
				const url = undefined;
				function rawContent() {
					return "\n# Markdown 格式测试文档\n\n这是一个用于测试博客系统 Markdown 渲染能力的综合测试文档。\n\n## 文本格式测试\n\n### 基础文本样式\n\n这是普通文本。**这是粗体文本**。*这是斜体文本*。***这是粗斜体文本***。\n\n~~这是删除线文本~~。`这是内联代码`。\n\n### 链接测试\n\n- [外部链接](https://github.com/moxin-org/mofa)\n- [内部链接](/docs/quick-start)\n- [带标题的链接](https://mofa.ai \"MoFA 官方网站\")\n\n### 图片测试\n\n![MoFA Logo](/mofa-logo.png)\n\n## 标题层级测试\n\n# 一级标题 H1\n## 二级标题 H2  \n### 三级标题 H3\n#### 四级标题 H4\n##### 五级标题 H5\n###### 六级标题 H6\n\n## 列表测试\n\n### 无序列表\n\n- 第一项\n- 第二项\n  - 嵌套项目 2.1\n  - 嵌套项目 2.2\n    - 深度嵌套 2.2.1\n- 第三项\n\n### 有序列表\n\n1. 第一步\n2. 第二步\n   1. 子步骤 2.1\n   2. 子步骤 2.2\n3. 第三步\n\n### 任务列表\n\n- [x] 已完成的任务\n- [ ] 待完成的任务\n- [x] 另一个已完成的任务\n- [ ] 另一个待完成的任务\n\n## 代码块测试\n\n### Python 代码\n\n```python\ndef hello_world():\n    \"\"\"一个简单的Hello World函数\"\"\"\n    print(\"Hello, MoFA!\")\n    \n    # 创建一个简单的代理\n    agent = Agent(\n        name=\"greeter\",\n        prompt=\"你是一个友好的助手\"\n    )\n    \n    return agent.run(\"向世界问好\")\n\n# 调用函数\nresult = hello_world()\n```\n\n### JavaScript 代码\n\n```javascript\n// ES6 异步函数示例\nconst fetchData = async (url) => {\n    try {\n        const response = await fetch(url);\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error('获取数据失败:', error);\n        throw error;\n    }\n};\n\n// 使用示例\nfetchData('/api/agents')\n    .then(data => console.log(data))\n    .catch(err => console.error(err));\n```\n\n### YAML 配置\n\n```yaml\n# MoFA Agent 配置示例\nname: test-service\nversion: 1.0.0\n\n# Service configuration\nservice:\n  port: 8080\n  host: localhost\n  timeout: 30s\n\n# Database settings\ndatabase:\n  type: postgresql\n  host: db.example.com\n  port: 5432\n  name: testdb\n  user: admin\n  max_connections: 100\n\n# Cache configuration  \ncache:\n  enabled: true\n  type: redis\n  host: cache.example.com\n  port: 6379\n  ttl: 3600\n\n# Monitoring\nmonitoring:\n  enabled: true\n  metrics:\n    - cpu_usage\n    - memory_usage\n    - request_count\n  alerts:\n    - type: high_cpu\n      threshold: 80\n    - type: high_memory \n      threshold: 90\n\n# Feature flags\nfeatures:\n  new_ui: true\n  beta_api: false\n  dark_mode: true\n\n\n```\n\n## 引用测试\n\n> 这是一个简单的引用块。\n> 它可以包含多行内容。\n\n> ### 引用中的标题\n> \n> 引用块中也可以包含其他格式：\n> \n> - 列表项目\n> - **粗体文本**\n> - `代码片段`\n> \n> > 这是嵌套的引用块。\n\n## 表格测试\n\n### 简单表格\n\n| 特性 | MoFA | 其他框架 |\n|------|------|----------|\n| 易用性 | ⭐⭐⭐⭐⭐ | ⭐⭐⭐ |\n| 扩展性 | ⭐⭐⭐⭐⭐ | ⭐⭐⭐⭐ |\n| 性能 | ⭐⭐⭐⭐ | ⭐⭐⭐ |\n| 社区支持 | ⭐⭐⭐⭐ | ⭐⭐⭐⭐⭐ |\n\n### 对齐表格\n\n| 左对齐 | 居中对齐 | 右对齐 |\n|:-------|:--------:|-------:|\n| 文本 | 文本 | 文本 |\n| 长一点的文本内容 | 居中显示的内容 | 999.99 |\n| 短文本 | 中等长度的文本 | 42 |\n\n## 分隔线测试\n\n---\n\n这是一条分隔线上方的内容。\n\n***\n\n这是另一条分隔线下方的内容。\n\n___\n\n还有一种分隔线样式。\n\n## 特殊字符和符号\n\n### Emoji 测试\n\n🚀 🎯 💡 🔧 📚 ⚡ 🌟 🎨 🏆 💪\n\n### 特殊符号\n\n- 版权符号：© 2024\n- 商标符号：MoFA™\n- 注册商标：Python®\n- 箭头：→ ← ↑ ↓ ⇒ ⇐\n- 数学符号：± × ÷ ≠ ≤ ≥ ∞ √ ∑\n\n## HTML 元素测试\n\n### 键盘按键\n\n按下 <kbd>Ctrl</kbd> + <kbd>C</kbd> 复制文本。\n\n使用 <kbd>Cmd</kbd> + <kbd>V</kbd> 粘贴内容（Mac）。\n\n### 高亮文本\n\n这是一段包含 <mark>高亮文本</mark> 的句子。\n\n### 上标和下标\n\n水分子的化学式是 H<sub>2</sub>O。\n\n爱因斯坦的质能方程是 E = mc<sup>2</sup>。\n\n## 定义列表测试\n\nMoFA\n: Modular Framework for AI Agents，模块化 AI 代理框架\n\nAgent\n: 代理，在 MoFA 中指具有特定功能的 AI 单元\n\nPipeline\n: 管道，用于连接和编排多个 Agent 的工作流\n\n## 脚注测试\n\n这是一个包含脚注的句子[^1]。\n\n这是另一个脚注[^note]。\n\n[^1]: 这是第一个脚注的内容。\n\n[^note]: 这是命名脚注的内容，可以包含**格式化文本**和[链接](https://mofa.ai)。\n\n## 数学公式测试（如果支持）\n\n### 内联公式\n\n这是一个内联数学公式：$E = mc^2$\n\n### 块级公式\n\n$$\n\\sum_{i=1}^{n} x_i = x_1 + x_2 + \\cdots + x_n\n$$\n\n$$\n\\int_{0}^{\\infty} e^{-x^2} dx = \\frac{\\sqrt{\\pi}}{2}\n$$\n\n## 流程图测试（如果支持 Mermaid）\n\n```mermaid\ngraph TD\n    A[开始] --> B{是否有输入?}\n    B -->|是| C[处理输入]\n    B -->|否| D[等待输入]\n    C --> E[生成输出]\n    D --> B\n    E --> F[结束]\n```\n\n## 总结\n\n这个测试文档包含了大部分常用的 Markdown 格式：\n\n1. ✅ 标题层级（H1-H6）\n2. ✅ 文本格式（粗体、斜体、删除线）\n3. ✅ 列表（有序、无序、任务列表）\n4. ✅ 链接和图片\n5. ✅ 代码块（多种语言）\n6. ✅ 引用块\n7. ✅ 表格（简单和对齐）\n8. ✅ 分隔线\n9. ✅ HTML 元素\n10. ✅ 特殊字符和 Emoji\n11. ✅ 定义列表\n12. ✅ 脚注\n13. ⚠️ 数学公式（需要插件支持）\n14. ⚠️ 流程图（需要 Mermaid 支持）\n\n通过这个测试文档，我们可以验证博客系统对各种 Markdown 格式的渲染效果。 ";
				}
				function compiledContent() {
					return html;
				}
				function getHeadings() {
					return [{"depth":1,"slug":"markdown-格式测试文档","text":"Markdown 格式测试文档"},{"depth":2,"slug":"文本格式测试","text":"文本格式测试"},{"depth":3,"slug":"基础文本样式","text":"基础文本样式"},{"depth":3,"slug":"链接测试","text":"链接测试"},{"depth":3,"slug":"图片测试","text":"图片测试"},{"depth":2,"slug":"标题层级测试","text":"标题层级测试"},{"depth":1,"slug":"一级标题-h1","text":"一级标题 H1"},{"depth":2,"slug":"二级标题-h2","text":"二级标题 H2"},{"depth":3,"slug":"三级标题-h3","text":"三级标题 H3"},{"depth":4,"slug":"四级标题-h4","text":"四级标题 H4"},{"depth":5,"slug":"五级标题-h5","text":"五级标题 H5"},{"depth":6,"slug":"六级标题-h6","text":"六级标题 H6"},{"depth":2,"slug":"列表测试","text":"列表测试"},{"depth":3,"slug":"无序列表","text":"无序列表"},{"depth":3,"slug":"有序列表","text":"有序列表"},{"depth":3,"slug":"任务列表","text":"任务列表"},{"depth":2,"slug":"代码块测试","text":"代码块测试"},{"depth":3,"slug":"python-代码","text":"Python 代码"},{"depth":3,"slug":"javascript-代码","text":"JavaScript 代码"},{"depth":3,"slug":"yaml-配置","text":"YAML 配置"},{"depth":2,"slug":"引用测试","text":"引用测试"},{"depth":3,"slug":"引用中的标题","text":"引用中的标题"},{"depth":2,"slug":"表格测试","text":"表格测试"},{"depth":3,"slug":"简单表格","text":"简单表格"},{"depth":3,"slug":"对齐表格","text":"对齐表格"},{"depth":2,"slug":"分隔线测试","text":"分隔线测试"},{"depth":2,"slug":"特殊字符和符号","text":"特殊字符和符号"},{"depth":3,"slug":"emoji-测试","text":"Emoji 测试"},{"depth":3,"slug":"特殊符号","text":"特殊符号"},{"depth":2,"slug":"html-元素测试","text":"HTML 元素测试"},{"depth":3,"slug":"键盘按键","text":"键盘按键"},{"depth":3,"slug":"高亮文本","text":"高亮文本"},{"depth":3,"slug":"上标和下标","text":"上标和下标"},{"depth":2,"slug":"定义列表测试","text":"定义列表测试"},{"depth":2,"slug":"脚注测试","text":"脚注测试"},{"depth":2,"slug":"数学公式测试如果支持","text":"数学公式测试（如果支持）"},{"depth":3,"slug":"内联公式","text":"内联公式"},{"depth":3,"slug":"块级公式","text":"块级公式"},{"depth":2,"slug":"流程图测试如果支持-mermaid","text":"流程图测试（如果支持 Mermaid）"},{"depth":2,"slug":"总结","text":"总结"},{"depth":2,"slug":"footnote-label","text":"Footnotes"}];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`;
				});

export { Content, compiledContent, Content as default, file, frontmatter, getHeadings, rawContent, url };
